name: Run JMeter Tests and Publish Report

on:
  schedule:
    - cron: '0 2 * * *'  # Every day at 2:00 AM UTC (10:00 PM ET)
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  jmeter-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Java 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Install JMeter manually
      run: |
        wget https://dlcdn.apache.org//jmeter/binaries/apache-jmeter-5.6.3.tgz
        tar -xzf apache-jmeter-5.6.3.tgz
        export JMETER_HOME=$PWD/apache-jmeter-5.6.3
        echo "JMETER_HOME=$JMETER_HOME" >> $GITHUB_ENV
        echo "$JMETER_HOME/bin" >> $GITHUB_PATH

    - name: Run JMeter test and generate HTML report
      run: |
        mkdir -p results/report
        jmeter -Jxstream.disable=true -n -t tests/APIs_Script.jmx -l results/result.jtl -e -o results/report

    - name: Install xmllint
      run: sudo apt-get update && sudo apt-get install -y libxml2-utils

    - name: Extract test config from .jmx
      id: jmeter_config
      run: |
        THREADS=$(xmllint --xpath "string(//ThreadGroup/stringProp[@name='ThreadGroup.num_threads'])" tests/APIs_Script.jmx)
        RAMPUP=$(xmllint --xpath "string(//ThreadGroup/stringProp[@name='ThreadGroup.ramp_time'])" tests/APIs_Script.jmx)
        DURATION=$(xmllint --xpath "string(//ThreadGroup/stringProp[@name='ThreadGroup.duration'])" tests/APIs_Script.jmx)
        echo "threads=$THREADS" >> $GITHUB_OUTPUT
        echo "rampup=$RAMPUP" >> $GITHUB_OUTPUT
        echo "duration=$DURATION" >> $GITHUB_OUTPUT

    - name: Analyze JTL log for errors and slow APIs
      id: analyze
      run: |
        ALERT=false
        OUTPUT=""
        while IFS=',' read -r ts elapsed label responseCode responseMessage threadName dataType success failureMessage bytes sentBytes grpThreads allThreads URL Latency IdleTime Connect;
        do
          if [[ "$elapsed" -gt 2500 ]]; then
            OUTPUT+="â€¢ $label â†’ ${elapsed}ms (slow)\n"
            ALERT=true
          fi
          if [[ "$responseCode" =~ ^4|^5 ]]; then
            OUTPUT+="â€¢ $label â†’ $responseCode ($responseMessage) in ${elapsed}ms\n"
            ALERT=true
          fi
        done < <(tail -n +2 results/result.jtl)

        echo -e "$OUTPUT" > results/alert_summary.txt
        echo "alert=$ALERT" >> $GITHUB_OUTPUT

    - name: Send Slack alert if issues found
      if: steps.analyze.outputs.alert == 'true'
      run: |
        SUMMARY=$(cat results/alert_summary.txt | sed ':a;N;$!ba;s/\n/\\n/g')
        curl -X POST -H 'Content-type: application/json' --data "{
          \"text\": \":warning: *JMeter Alert*\nThe following APIs had issues:\n$SUMMARY\n\n*Test Configuration:*\nâ€¢ Users: ${{ steps.jmeter_config.outputs.threads }}\nâ€¢ Ramp-up: ${{ steps.jmeter_config.outputs.rampup }}s\nâ€¢ Duration: ${{ steps.jmeter_config.outputs.duration }}s\n\n:mag: View report: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/\"
        }" $SLACK_WEBHOOK_URL
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

    - name: Deploy HTML report to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./results/report
        publish_branch: gh-pages
        force_orphan: true
        keep_files: false
        commit_message: "Deploy JMeter HTML report ðŸš€"
